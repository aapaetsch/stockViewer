{"version":3,"sources":["services/firebase.js","helpers/auth.js","popups/authenticate.js","components/menubar.js","components/sideBar.js","helpers/rtdbCommunication.js","components/stockInfoCard.js","pages/worldStats.js","popups/addStock.js","components/Portfolio/tableInternal.js","components/Portfolio/stocklist.js","components/Portfolio/locationDonut.js","components/Portfolio/categoryRadar.js","components/Portfolio/recentTransactionCard.js","pages/Portfolio.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","realTime","database","firestore","signup","email","password","remember","a","getPersistence","setPersistence","then","createUserWithEmailAndPassword","console","log","signin","signInWithEmailAndPassword","signInWithProvider","providerName","provider","GoogleAuthProvider","GithubAuthProvider","FacebookAuthProvider","signInWithPopup","Auth","Persistence","LOCAL","SESSION","logout","signOut","Authenticate","props","hideAuthentication","closeAuthenticate","formRef","current","resetFields","error","state","remembered","handleSubmit","bind","providerSignIn","createRef","nextProps","this","values","setState","title","result","message","success","currentUser","toString","displayName","style","textAlign","color","visible","onCancel","footer","linkName","switchType","displayText","linkText","onClick","className","switchScreen","changeAuthenticateType","name","ref","initialValues","onFinish","onFinishFailed","errorInfo","Item","rules","type","required","prefix","UserOutlined","placeholder","LockOutlined","LockTwoTone","id","onChange","htmlType","icon","GithubFilled","ChromeFilled","Component","Search","Input","MenuBar","showAuthenticate","authenticateType","hideAuthenticate","switchAuthenticateType","separatorCol","userCol","menuBarGutter","nextState","nextContext","user","align","justify","gutter","flex","offset","width","paddingTop","onSearch","value","enterButton","size","src","photoURL","ImportOutlined","to","SideBar","changePage","event","key","selected","onAuthStateChanged","multiple","zIndex","selectedKeys","mode","collapse","React","createElement","isCollapsed","MenuFoldOutlined","MenuUnfoldOutlined","GlobalOutlined","BankOutlined","disabled","authenticated","stonkApi","addPosition","cost","uid","fetch","ticker","response","json","data","badData","replace","docRef","once","doc","exists","updatePosition","Date","date","perShare","Number","shares","toFixed","newPosition","category","transactions","transaction","writeSuccess","set","previousDoc","val","prevShares","prevSector","newCost","newShares","updatedPosition","payload","toUpperCase","updateSuccess","transactionSuccess","update","t","child","push","getMultipleTickers","arg","tickers","resData","WorldStatInfoCard","hoverable","precision","change","valueStyle","ArrowUpOutlined","ArrowDownOutlined","suffix","changePercent","fontSize","marginTop","timeStamp","d","toLocaleDateString","toLocaleTimeString","formatDate","lastUpdate","WorldStats","borders","currencyData","indicieData","formatMainStats","mainCurrencies","mainIndicies","indexData","statCards","dataSource","cards","map","stat","Option","Select","AddStock","notificationContent","totalCost","updatePositionContent","showAddStock","hideAddStock","costTypeSize","addStockOk","addStockCancel","includes","isNaN","costType","loading","notification","description","costTypeSelector","noStyle","PlusOutlined","updatingData","maskClosable","closable","href","labelCol","xs","span","sm","wrapperCol","layout","label","addonBefore","TableInternal","headStyle","backgroundColor","borderRadius","bodyStyle","bordered","sectors","text","StockList","showLoading","gutterSize","prevProps","prevState","snapshot","length","sectorValue","word","i","charCodeAt","stockListColumns","dataIndex","fixed","render","sorter","b","filters","onFilter","record","indexOf","compare","currentValue","myCardTitle","myCardButtons","checkedChildren","unCheckedChildren","defaultChecked","setCurrency","updateMainData","updateParentData","rowClassName","index","int","colorSwitcher","expandable","expandedRowRender","expandRowByClick","columns","pagination","scroll","x","y","summary","Summary","Row","Cell","colRow","totalBookValue","currentTotal","LocationDonut","formatData","updating","dataOriginal","dataCurrent","locationWeightsOriginal","locationWeightsCurrent","forEach","positions","location","Weight","originalPercent","portfolioPercent","exchange","Object","keys","originalData","currentData","formattedData","prop","locationDonut","radius","angleField","colorField","statistic","active","CategoryRadar","currentWeight","originalWeight","radarData","position","weight","marketSectors","sector","Type","radiusField","seriesField","radiusAxis","grid","line","area","opacity","point","shape","legend","RangePicker","DatePicker","RecentTransactionCard","sortData","transactKeys","j","split","splice","join","search","action","sort","onDateRangeChange","range","rangeStrings","start","end","filterDropdown","allowEmpty","onCalendarChange","day","Portfolio","setPortfolioListener","portfolioListener","on","currency","originalBookValue","off","portfolio","setPortfolio","dataList","stockData","currentTotalValue","stock","cv","profit","price","profitPercent","originalBookVal","colSize","Header","Layout","Content","Sider","Footer","PrivateRoute","component","rest","pathname","from","App","collapseSidebar","collapsed","breakpoint","collapsible","height","trigger","offsetTop","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab3ecd10.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyDWBVqbz6vL6NdeIej0HccjA1PaDJ04jpI\",\r\n    authDomain: \"stockviewer-2c7c3.firebaseapp.com\",\r\n    databaseURL: \"https://stockviewer-2c7c3.firebaseio.com\",\r\n    projectId: \"stockviewer-2c7c3\",\r\n    storageBucket: \"stockviewer-2c7c3.appspot.com\",\r\n    messagingSenderId: \"220017451421\",\r\n    appId: \"1:220017451421:web:0ccfacdb66182b06e98f74\",\r\n    measurementId: \"G-ET4VWCH7VY\"\r\n}\r\n\r\nfirebase.initializeApp(config);\r\nexport const auth = firebase.auth;\r\nexport const realTime = firebase.database();\r\nexport const db = firebase.firestore();\r\n\r\n","import { auth } from '../services/firebase';\r\nimport firebase from 'firebase';\r\nimport { message } from 'antd';\r\n\r\nexport async function signup(email, password, remember){\r\n    try{\r\n        return auth().setPersistence(await getPersistence(remember))\r\n            .then( async () => {\r\n                return await auth().createUserWithEmailAndPassword(email, password);\r\n            });\r\n    } catch(error){\r\n        console.log(error);\r\n        return false;\r\n    }\r\n}\r\n\r\nexport async function signin(email, password, remember){\r\n    try{\r\n        return auth().setPersistence(await getPersistence(remember))\r\n            .then( async () => {\r\n                return await auth().signInWithEmailAndPassword(email, password);\r\n            });\r\n    } catch(error) {\r\n        console.log(error);\r\n        return false;\r\n    }\r\n}\r\n\r\nexport async function signInWithProvider(providerName, remember){\r\n    let provider;\r\n    switch(providerName){\r\n        case 'google':\r\n            provider = new auth.GoogleAuthProvider();\r\n            break;\r\n        case 'git':\r\n            provider = new auth.GithubAuthProvider();\r\n            break;\r\n        case 'facebook':\r\n            provider = new auth.FacebookAuthProvider();\r\n            break;\r\n        default:\r\n            provider = null;\r\n            break;\r\n    }\r\n    try{\r\n        return auth().setPersistence(await getPersistence(remember))\r\n            .then( async () => {\r\n                return await auth().signInWithPopup(provider);\r\n            });\r\n    } catch(error){\r\n        console.log(error);\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nasync function getPersistence(remember){\r\n    if (remember){\r\n        return auth.Auth.Persistence.LOCAL;\r\n    }\r\n    return auth.Auth.Persistence.SESSION;\r\n}\r\n\r\nexport async function logout(){\r\n    return auth().signOut();\r\n}","import React, { Component, createRef } from 'react';\r\nimport {\r\n    Button, Modal, Form, Drawer,\r\n    Input, Checkbox, message,\r\n    Divider, Space, Row, Col\r\n       } from 'antd';\r\nimport { auth } from 'firebase';\r\nimport { GithubFilled, ChromeFilled, UserOutlined, LockOutlined, LockTwoTone } from '@ant-design/icons';\r\nimport { signInWithProvider, signin, signup} from \"../helpers/auth\";\r\nimport '../App.css';\r\n\r\nexport default class Authenticate extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            remembered: false,\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.providerSignIn = this.providerSignIn.bind(this);\r\n        this.formRef = createRef();\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps){\r\n        return this.props !== nextProps;\r\n    }\r\n\r\n\r\n    async handleSubmit(values){\r\n        this.setState({error:''});\r\n        console.log(this.state);\r\n\r\n        try{\r\n            if (this.props.title === 'Login'){\r\n\r\n                signin(values['emailItem'], values['passwordItem'], this.state.remembered)\r\n                    .then((result) =>{\r\n                        if(result !== false){\r\n                            message.success('Signed in as: ' + auth().currentUser.email.toString());\r\n                        } else {\r\n                            message.error('Error Signing In.');\r\n                        }\r\n                    } );\r\n\r\n            } else {\r\n\r\n                if (values['passwordItem'] === values['confirmPasswordItem']){\r\n                    signup(values['emailItem'], values['passwordItem'], this.state.remembered)\r\n                        .then((result) =>{\r\n                            if(result !== false){\r\n                                message.success('Signed in as: ' + auth().currentUser.email.toString());\r\n                            } else {\r\n                                message.error('Error Signing Up.');\r\n                            }\r\n                        });\r\n                } else {\r\n                    message.error('Passwords do not match.');\r\n                    return;\r\n                }\r\n            }\r\n\r\n        } catch(error){\r\n\r\n            console.log(error);\r\n            this.setState({error: error.message});\r\n\r\n            if (this.props.title === 'Login'){\r\n                message.error('Error Signing In');\r\n            }\r\n            else {\r\n                message.error('Error:'+error.message);\r\n            }\r\n        }\r\n        this.hideAuthentication();\r\n    }\r\n\r\n    async providerSignIn(providerName){\r\n\r\n        try{\r\n            //TODO: fix signin session persistence\r\n            signInWithProvider(providerName, this.state.remembered)\r\n                .then((result) =>{\r\n                    if(result !== false){\r\n                        message.success('Signed in as: ' + auth().currentUser.displayName);\r\n                    } else {\r\n                        message.error('Error Signing in with '+ providerName);\r\n                    }\r\n                } );\r\n\r\n\r\n        } catch(error) {\r\n\r\n            this.setState({error: error.message});\r\n\r\n            if (this.props.title === 'Login'){\r\n                message.error('There was an error logging in.');\r\n            } else {\r\n                message.error('There was an error creating your account.');\r\n            }\r\n        }\r\n        this.hideAuthentication();\r\n    }\r\n    hideAuthentication = () => {\r\n        console.log('click');\r\n        this.props.closeAuthenticate();\r\n        try {\r\n            this.formRef.current.resetFields();\r\n        } catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const onFinishFailed = errorInfo => {\r\n            message.error('Error in Authentication');\r\n        }\r\n        function switchScreen(linkName, switchType) {\r\n            let displayText = 'Already Registered? ';\r\n            let linkText = 'Login';\r\n            if (linkName === 'Login'){\r\n                linkText = 'Sign Up';\r\n                displayText = \"Don't have an account? \";\r\n            }\r\n            return (\r\n              <div style={{textAlign: 'center'}}>\r\n                  {displayText}&nbsp;\r\n                  <span onClick={() => switchType()} className='linkHover'>\r\n                      {linkText}\r\n                  </span>\r\n              </div>\r\n            );\r\n        }\r\n        return(\r\n            <div>\r\n                <Modal\r\n                    title={(<h2 style={{textAlign: 'center', color: '#fff'}}>{this.props.title}</h2>)}\r\n                    visible={this.props.visible}\r\n                    onCancel={this.hideAuthentication}\r\n                    footer={switchScreen(this.props.title, this.props.changeAuthenticateType)}>\r\n                    <Form\r\n                        name='normal_login'\r\n                        className='login-form'\r\n                        ref={this.formRef}\r\n                        initialValues={{remember: false}}\r\n                        onFinish={this.handleSubmit}\r\n                        onFinishFailed={onFinishFailed}\r\n                    >\r\n                        <Form.Item\r\n                            name='emailItem'\r\n                            rules={[\r\n                                {type: 'email', message: 'The input is not a valid Email Address.'},\r\n                                {required: true, message: 'Please input your Email Address'}\r\n                            ]}\r\n                        >\r\n                            <Input\r\n                                name='email'\r\n                                prefix={<UserOutlined className='site-form-item-icon'/>}\r\n                                placeholder=\"Email\"/>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name='passwordItem'\r\n                            rules={[{required:true, message: 'Please enter a Password!'}]}\r\n                        >\r\n                            <Input\r\n                                prefix={<LockOutlined className='site-form-item-icon'/>}\r\n                                type='password'\r\n                                name='password'\r\n                                placeholder='Password'/>\r\n                        </Form.Item>\r\n                        { this.props.title !== 'Login' ?\r\n                            (<Form.Item\r\n                                    name='confirmPasswordItem'\r\n                                    rules={[{required: true, message: 'Passwords must match!'}]}\r\n                                >\r\n                                    <Input\r\n                                        prefix={<LockTwoTone className='site-form-item-icon'/>}\r\n                                        type='password'\r\n                                        name='matchingPassword'\r\n                                        placeholder='Retype Password'/>\r\n                                </Form.Item>\r\n                            ) : (<div/>)\r\n                        }\r\n                        <div id='signInGroup' style={{textAlign:'center'}}>\r\n                            <Checkbox\r\n                                onChange={() => this.setState({remember: !this.state.remember})}\r\n                                style={{color: '#fff'}}\r\n                            >\r\n                                Remember Me\r\n                            </Checkbox>\r\n                            <Button\r\n                                className='authenticateButton'\r\n                                htmlType='submit'\r\n                                type='primary'\r\n                            >\r\n                                {this.props.title}\r\n                            </Button><br/>\r\n                            <h3 style={{color: '#fff'}}>OR</h3>\r\n                            <Button\r\n                                className='authenticateButton'\r\n                                type='primary'\r\n                                icon={<GithubFilled/>}\r\n                                onClick={() => this.providerSignIn('git') }\r\n                            >\r\n                                Continue with Github\r\n                            </Button>\r\n                            <Button\r\n                                className='authenticateButton'\r\n                                type='primary'\r\n                                icon={<ChromeFilled/>}\r\n                                onClick={() => this.providerSignIn('google') }\r\n                            >\r\n                                Continue with Google\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Row, Col, Space, Avatar, Button, Input} from 'antd';\r\nimport { logout } from '../helpers/auth';\r\nimport Authenticate from \"../popups/authenticate\";\r\nimport { UserOutlined, ImportOutlined } from '@ant-design/icons';\r\n// import 'antd/dist/antd.css';\r\n// import 'antd/dist/antd.less';\r\nimport '../App.css';\r\n\r\n\r\nconst { Search } = Input;\r\n\r\nexport default class MenuBar extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            separatorCol: 15,\r\n            userCol: 2,\r\n            menuBarGutter: 8,\r\n            showAuthenticate: false,\r\n            authenticateType: null,\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        return this.props.currentUser !== nextProps.currentUser || this.state !== nextState;\r\n    }\r\n\r\n    showAuthenticate = (type) => {\r\n        this.setState({showAuthenticate: true, authenticateType:type});\r\n        console.log('click');\r\n    }\r\n    hideAuthenticate = () => {\r\n        this.setState({showAuthenticate: false, authenticateType: null});\r\n    }\r\n\r\n    switchAuthenticateType = () => {\r\n        if (this.state.authenticateType === 'Login'){\r\n            this.setState({authenticateType: 'Sign Up'});\r\n        } else {\r\n            this.setState({authenticateType: 'Login'});\r\n        }\r\n    }\r\n\r\n\r\n    render () {\r\n        function registeredUser(user) {\r\n            return (\r\n                <Space size='large'>\r\n                    <Avatar\r\n                        src={user.photoURL}\r\n                        icon={<UserOutlined/>}\r\n                        />\r\n                        <span style={{color: 'white'}}>\r\n                            { user.displayName === null\r\n                                ? (user.email)\r\n                                : (user.displayName)\r\n                            } &nbsp; &nbsp;\r\n                        </span>\r\n                    <Button type='primary' icon={<ImportOutlined/>} onClick={logout}>\r\n                        <NavLink to='/welcome' style={{color: 'white'}}>\r\n                            Logout\r\n                        </NavLink>\r\n                    </Button>\r\n                </Space>\r\n            );\r\n        }\r\n\r\n\r\n        return(\r\n            <Row align='center' justify='space-between' gutter={this.state.menuBarGutter}>\r\n                <Col flex={3}>\r\n                    {/*Add logo??*/}\r\n                    <h2 style={{color:'white'}}>\r\n                        Stonks\r\n                    </h2>\r\n                </Col>\r\n                <Col flex={6} offset={1}>\r\n                    <Search\r\n                        placeholder=\"Enter a Ticker\"\r\n                        style={{width: '100%', paddingTop: '4%'}}\r\n                        onSearch={ (value) => console.log('search bar:',value)}\r\n                        enterButton/>\r\n                </Col>\r\n                <Col flex={6} offset={4}>\r\n                {/*Login/ authenticated user*/}\r\n                    { this.props.currentUser === null\r\n                        ? (\r\n                            <Space>\r\n                                <Button type='primary' onClick={() => this.showAuthenticate('Login')}>\r\n                                    Login\r\n                                </Button>\r\n                                <Button type='primary' onClick={() => this.showAuthenticate('Sign Up')}>\r\n                                    Sign Up\r\n                                </Button>\r\n                            </Space>\r\n                            )\r\n                        : (registeredUser(this.props.currentUser))\r\n                    }\r\n                </Col>\r\n                <Authenticate\r\n                    visible={this.state.showAuthenticate}\r\n                    title={this.state.authenticateType}\r\n                    closeAuthenticate={this.hideAuthenticate}\r\n                    changeAuthenticateType={this.switchAuthenticateType}\r\n                />\r\n            </Row>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Menu, Button } from 'antd';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { auth } from '../services/firebase';\r\nimport { RocketOutlined, BankOutlined, GlobalOutlined, MenuFoldOutlined, MenuUnfoldOutlined } from '@ant-design/icons';\r\n// import 'antd/dist/antd.css';\r\nimport '../App.css';\r\n\r\nexport default class SideBar extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            selected: '/world',\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        auth().onAuthStateChanged( (user) => {\r\n            if (user === null){\r\n                this.setState({selected: '/world'});\r\n            }\r\n        })\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        return this.state !== nextState || this.props !== nextProps;\r\n    }\r\n\r\n    changePage = (event) => {\r\n        //TODO: change to off the site address?\r\n        if (event){\r\n            if (event.key !== 'null'){\r\n                this.setState({selected: event.key});\r\n                console.log(event)\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Menu\r\n                multiple={false}\r\n                style={{zIndex:-1}}\r\n                selectedKeys={[this.state.selected]}\r\n                onClick={this.changePage}\r\n                mode='inline'\r\n            >\r\n                <Menu.Item/>\r\n                <Menu.Item onClick={this.props.collapse} key={'null'}>\r\n                    {React.createElement(this.props.isCollapsed ? MenuFoldOutlined : MenuUnfoldOutlined)}\r\n                </Menu.Item>\r\n                <Menu.Item\r\n                    icon={<GlobalOutlined/>}\r\n                    key='/world'>\r\n                    <NavLink to={'/'}>\r\n                        World\r\n                    </NavLink>\r\n                </Menu.Item>\r\n                {/*<Menu.Item*/}\r\n                {/*    icon={<RocketOutlined />}*/}\r\n                {/*    key='/welcome'>*/}\r\n                {/*    <NavLink to={'/welcome'}>*/}\r\n                {/*        Welcome*/}\r\n                {/*    </NavLink>*/}\r\n                {/*</Menu.Item>*/}\r\n                <Menu.Item\r\n                    icon={<BankOutlined />}\r\n                    key='/portfolio'\r\n                    disabled={!this.props.authenticated}>\r\n                    <NavLink to={'/portfolio'}>\r\n                        Portfolio\r\n                    </NavLink>\r\n                </Menu.Item>\r\n\r\n\r\n            </Menu>\r\n\r\n        );\r\n    }\r\n}","import { auth, realTime } from '../services/firebase';\r\nimport { message } from 'antd';\r\nconst stonkApi = 'http://localhost:5000/stonksAPI/v1'\r\n\r\n//TODO: add rollback for failed transactions\r\n\r\nexport async function addPosition(values, cost){\r\n    const currentUser = auth().currentUser;\r\n    if (currentUser === null){\r\n        return [false, null];\r\n    }\r\n    const uid = currentUser.uid;\r\n    //TODO: Add Check for valid ticker\r\n    const response = await fetch(`${stonkApi}/single/exists?ticker=${values.ticker}`);\r\n    const data = await response.json();\r\n    let badData = true;\r\n    if (data){\r\n        badData = false;\r\n    }\r\n    if (badData){\r\n        return false\r\n    }\r\n\r\n    const ticker = values.ticker.replace('.', '_');\r\n    const docRef = realTime.ref('/portfolios/'+uid+'/'+ticker);\r\n    const doc = await docRef.once('value');\r\n\r\n    if (doc.exists()){\r\n        return await updatePosition(uid, values, cost, doc);\r\n    } else {\r\n        try {\r\n            const date = await new Date();\r\n            const perShare = (Number(cost)/Number(values.shares)).toFixed(4);\r\n            const newPosition = {\r\n                category: values.category,\r\n                shares: Number(values.shares),\r\n                cost: Number(cost),\r\n                transactions: [{date: date.toString(), transaction:`${values.shares} shares bought @ $${perShare} ea`}]\r\n            }\r\n            let writeSuccess = true;\r\n            await docRef.set(newPosition, (error) => {\r\n                if (error){\r\n                    writeSuccess = false;\r\n                }\r\n            });\r\n            return [writeSuccess, 'add'];\r\n\r\n        } catch(error) {\r\n            console.log(error);\r\n            return [false, 'add'];\r\n        }\r\n    }\r\n}\r\n\r\nexport async function updatePosition(uid, values, cost, doc){\r\n    //This function is only for increasing the shares in a position/ adding a new position\r\n    const ticker = values.ticker.replace('.', '_');\r\n    const docRef = realTime.ref('/portfolios/'+uid+'/'+ticker);\r\n    try {\r\n        const previousDoc = doc.val();\r\n        const prevShares = doc.val().shares;\r\n        const prevSector = doc.val().category;\r\n        const newCost = Number(cost) + Number(doc.val().cost);\r\n        const newShares = Number(prevShares) + Number(values.shares);\r\n        const perShare = (Number(cost)/Number(values.shares)).toFixed(4);\r\n\r\n        const updatedPosition = {\r\n            category: values.category,\r\n            shares: newShares,\r\n            cost: newCost,\r\n        }\r\n\r\n        const payload = [values.ticker.toUpperCase(), [prevShares, newShares], newCost, [prevSector, values.category]];\r\n        let updateSuccess = true;\r\n        let transactionSuccess = true;\r\n        await docRef.update(updatedPosition, (error) => {\r\n            if (error){\r\n                updateSuccess = false;\r\n            }\r\n        });\r\n        if (updateSuccess){\r\n            // update the transaction\r\n            const t = {\r\n                date: new Date().toString(),\r\n                transaction: `${Number(values.shares)} shares bought @ $${perShare} ea`\r\n            }\r\n            await docRef.child('/transactions/').push().set(t, (error) => {\r\n                if (error) {\r\n                    transactionSuccess = false;\r\n                }\r\n            });\r\n        }\r\n\r\n        //Revert the transaction if any part fails.\r\n        if (!transactionSuccess){\r\n            await docRef.update(previousDoc);\r\n            updateSuccess = false;\r\n        }\r\n\r\n        return [updateSuccess, 'update', payload];\r\n\r\n    } catch(error) {\r\n        console.log(error);\r\n        return [false, 'update', null];\r\n    }\r\n}\r\n\r\nfunction logTransaction(uid, ticker, type, data){\r\n    const transactionRef = realTime.ref('/portfolios/'+uid+'/'+ticker+'/transactions').push();\r\n    if (type === 'buy'){\r\n        let dataString = `${data[0]} shares bought @ $${data[1]} ea`;\r\n        return transactionRef.set({transactionTime: new Date(), transaction: dataString}, (error) => {\r\n            if (error){\r\n                console.log(error);\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n}\r\n\r\nexport async function getMultipleTickers(type, arg, tickers){\r\n    try{\r\n        console.log(`${stonkApi}/${type}/multiple?${arg}=${tickers}`);\r\n        const result = await fetch(`${stonkApi}/${type}/multiple?${arg}=${tickers}`);\r\n        const resData = result.json();\r\n        console.log(resData)\r\n        return resData;\r\n    } catch (error){\r\n        console.log(error);\r\n        return null\r\n    }\r\n\r\n}\r\n\r\n\r\nexport async function deleteStock(uid, values, cost){\r\n//TODO: add delete stocks\r\n}\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport { Card, Button, Statistic, Row, Col} from \"antd\";\r\nimport { ArrowUpOutlined, ArrowDownOutlined } from \"@ant-design/icons\";\r\n// import 'antd/dist/antd.css';\r\nimport '../App.css';\r\n\r\nexport default class WorldStatInfoCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        function formatDate(timeStamp) {\r\n            const d = new Date(timeStamp * 1000);\r\n            return `${d.toLocaleDateString(\"en-US\")} ${d.toLocaleTimeString(\"en-US\")}`\r\n        }\r\n        return (\r\n            <Card\r\n                title={this.props.data.name}\r\n                className='cardRounded'\r\n                hoverable\r\n                >\r\n                <Statistic\r\n                    value={this.props.data.value}\r\n                    precision={2}\r\n                    />\r\n                <Statistic\r\n                    value={this.props.data.change}\r\n                    valueStyle={this.props.data.change > 0 ?\r\n                        ({color: '#49aa19'}) :\r\n                        ({color: '#d32029'})\r\n                    }\r\n                    prefix={this.props.data.change > 0 ?\r\n                        (<ArrowUpOutlined/>):\r\n                        (<ArrowDownOutlined/>)\r\n                    }\r\n                    suffix={` (${this.props.data.changePercent})`}\r\n                />\r\n                <span style={{color: '#bfbfbf', fontSize: '10px', marginTop: '3%'}}>\r\n                    Last updated: {formatDate(this.props.data.lastUpdate)}\r\n                </span>\r\n            </Card>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Row, Col, message } from 'antd';\r\nimport {getMultipleTickers} from \"../helpers/rtdbCommunication\";\r\nimport WorldStatInfoCard from \"../components/stockInfoCard\";\r\n// import 'antd/dist/antd.css';\r\nimport '../App.css';\r\nconst stonkApi = 'http://localhost:5000/stonksAPI/v1';\r\n\r\nexport default class WorldStats extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            borders: [8,8],\r\n            data: [],\r\n            currencyData: [],\r\n            indicieData: [],\r\n            // updatingData: false,\r\n        }\r\n        this.formatMainStats = this.formatMainStats.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.formatMainStats();\r\n    }\r\n\r\n    async formatMainStats() {\r\n        console.log('start');\r\n        const mainCurrencies = ['CADUSD=X', 'CADEUR=X', 'CADGBP=X'];\r\n        const currencyData = await getMultipleTickers('currencies', 'currencies', mainCurrencies);\r\n        console.log(currencyData);\r\n        const mainIndicies = [\"^GSPTSE\", \"^GSPC\", \"^DJI\", \"^IXIC\"];\r\n        const indexData = await getMultipleTickers('indicies', 'indicies', mainIndicies);\r\n        console.log(indexData);\r\n        this.setState({currencyData: (currencyData !== null ? (currencyData) : ([])),\r\n            indicieData: (indexData !== null ? (indexData) : ([]))\r\n        });\r\n    }\r\n\r\n    render() {\r\n        function statCards(dataSource, borders){\r\n            const cards = dataSource.map( (stat) =>\r\n                <Col flex={1}>\r\n                    <WorldStatInfoCard data={stat}/>\r\n                </Col>);\r\n\r\n            return (\r\n                <Row className='gutter-row' justify='center' align='middle' gutter={borders}>\r\n                    {cards}\r\n                </Row>\r\n            );\r\n        }\r\n        return (\r\n            <div className='routerBackground'>\r\n                {statCards(this.state.indicieData, this.state.borders)}\r\n                {statCards(this.state.currencyData, this.state.borders)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, { Component, createRef } from 'react';\r\nimport {Modal, Button, Form, Input, Select, notification, Space, Col, Row, message} from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n// import {getAllTickers, addPosition} from \"../helpers/firebaseCommunication\";\r\nimport { addPosition } from \"../helpers/rtdbCommunication\";\r\nimport '../App.css';\r\n\r\nconst { Option } = Select;\r\n\r\nexport default class AddStock extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            visible: false,\r\n            costTypeSize: 110,\r\n        }\r\n        this.addStockOk = this.addStockOk.bind(this);\r\n        this.addStockCancel = this.addStockCancel.bind(this);\r\n        this.formRef = createRef();\r\n    }\r\n\r\n    async addStockOk(values) {\r\n        console.log(values);\r\n        values.ticker = values.ticker.toUpperCase();\r\n        //check the values to see if they are proper\r\n        if (values.shares.toString().includes('.')){\r\n            message.error('Number of shares must be whole numbers.', 15)\r\n        } else if (isNaN(values.cost)) {\r\n            message.error('Cost must be a number.');\r\n        } else {\r\n            let totalCost;\r\n            if (values.costType === 'perShare'){\r\n                totalCost = Number(values.cost) * Number(values.shares);\r\n            } else {\r\n                totalCost = Number(values.cost);\r\n            }\r\n            message.loading(\"Add Stock in Progress...\", 3);\r\n            await addPosition(values, totalCost)\r\n                .then((success) => {\r\n                    console.log(success);\r\n                    if (success[0]){\r\n                        //todo: fix the alert triggers.\r\n                        if (success[1] === 'add'){\r\n                            notification['success']({\r\n                                message: 'Added Stock Successfully',\r\n                                description: this.notificationContent(values, totalCost)\r\n                            });\r\n                        } else {\r\n                            notification['success']({\r\n                                message: 'Updated Stock Successfully',\r\n                                description: this.updatePositionContent(success[2])\r\n                            });\r\n                        }\r\n                    } else {\r\n                        message.error('There was an error adding the position.')\r\n                    }\r\n                    this.hideAddStock();\r\n                })\r\n        }\r\n    }\r\n\r\n    notificationContent = (values, totalCost) =>{\r\n        return (\r\n            <span>\r\n                Ticker: {values.ticker.toUpperCase()}<br/>\r\n                Sector: {values.category}<br/>\r\n                Cost: ${totalCost}\r\n            </span>\r\n        );\r\n    }\r\n    updatePositionContent = (payload) =>{\r\n        return (\r\n          <span>\r\n              Ticker: {payload[0].toUpperCase()}<br/>\r\n              {(payload[3][0] !== payload[3][1]) &&\r\n                (<div>\r\n                    <span>Sector: {payload[3][0]} => {payload[3][1]}</span><br/>\r\n                </div>)\r\n              }\r\n              Shares: {payload[1][0]} => {payload[1][1]}<br/>\r\n              Book Value: ${payload[2]}\r\n          </span>\r\n        );\r\n\r\n}\r\n\r\n    async addStockCancel() {\r\n        this.hideAddStock();\r\n    }\r\n\r\n    showAddStock = () => {\r\n        this.setState({visible: true});\r\n    }\r\n\r\n    hideAddStock = () => {\r\n        try{\r\n            this.formRef.current.resetFields();\r\n        } catch(error){\r\n            console.log(error);\r\n        }\r\n        this.setState({visible: false});\r\n\r\n    }\r\n\r\n    render(){\r\n        const formItemLayout = {\r\n            labelCol: { xs: { span: 12}, sm: { span: 6}},\r\n            wrapperCol: { xs: { span: 28}, sm: { span: 20}},\r\n        };\r\n        const costTypeSelector = (\r\n            <Form.Item name='costType' noStyle>\r\n                <Select\r\n                    style={{width: this.state.costTypeSize}}>\r\n                    <Option value=\"perShare\">Per Share</Option>\r\n                    <Option value=\"allShares\">Total Cost</Option>\r\n                </Select>\r\n            </Form.Item>\r\n        )\r\n\r\n        return (\r\n          <div>\r\n              {/*TODO: only enable add if a user is logged in.*/}\r\n              <Button type=\"primary\" icon={<PlusOutlined/>} onClick={this.showAddStock} disabled={this.props.updatingData}/>\r\n              <Modal\r\n                  title=\"Add A Stock\"\r\n                  visible={this.state.visible}\r\n                  maskClosable={false}\r\n                  closable={false}\r\n                  footer={[\r\n                      <p>\r\n                          Ticker should be in form \"Ticker.Exchange\" i.e. \"BAM-A.TO\". If you are unsure, please check at <a href='https://ca.finance.yahoo.com'>Yahoo Finance</a>\r\n                      </p>\r\n\r\n                  ]}\r\n                  >\r\n                  <Form\r\n                      {...formItemLayout}\r\n                      layout='horizontal'\r\n                      size='medium'\r\n                      initialValues={{\r\n                          costType: 'perShare',\r\n                      }}\r\n                      ref={this.formRef}\r\n                      onFinish={this.addStockOk}\r\n                  >\r\n                      <Form.Item\r\n                          name='ticker'\r\n                          label='Ticker'\r\n                          rules={[\r\n                              {\r\n                                  required: true,\r\n                                  message: 'Must be a valid ticker.',\r\n                              }\r\n                          ]}\r\n                      >\r\n                          <Input />\r\n                      </Form.Item>\r\n                      {/*<Form.Item*/}\r\n                      {/*    name='exchange'*/}\r\n                      {/*    label='Stock Exchange'*/}\r\n                      {/*    rules={[*/}\r\n                      {/*        {*/}\r\n                      {/*            required:true,*/}\r\n                      {/*            message: 'Select an Exchange'*/}\r\n                      {/*        }*/}\r\n                      {/*    ]}*/}\r\n                      {/*>*/}\r\n                      {/*    <Select>*/}\r\n                      {/*        <Option value='xtse'>TSX</Option>*/}\r\n                      {/*        /!*<Option value='tsxMutual'>Mutual Fund TSX</Option>*!/*/}\r\n                      {/*        <Option value='US'>Any US Exchange</Option>*/}\r\n                      {/*    </Select>*/}\r\n                      {/*</Form.Item>*/}\r\n                      <Form.Item\r\n                          name='category'\r\n                          label='Market Sector'\r\n                          rules={[\r\n                              {\r\n                                  required: true,\r\n                                  message: 'Must belong to a Sector.',\r\n                              }\r\n                          ]}\r\n                      >\r\n                          <Select>\r\n                              <Option value=\"Technology\">Technology</Option>\r\n                              <Option value=\"Communication\">Communication</Option>\r\n                              {/*Is this consumer non-cyc*/}\r\n                              <Option value=\"Consumer Discretionary\">Consumer Discretionary</Option>\r\n                              <Option value=\"Consumer Staple\">Consumer Staples</Option>\r\n                              <Option value='Energy'>Energy</Option>\r\n                              <Option value=\"Financial\">Financial</Option>\r\n                              <Option value=\"Healthcare\">Healthcare</Option>\r\n                              <Option value=\"Industrial\">Industrial</Option>\r\n                              <Option value=\"Materials\">Materials</Option>\r\n                              <Option value=\"Real Estate\">Real Estate</Option>\r\n                              <Option value=\"Utilities\">Utilities</Option>\r\n                              <Option value=\"International\">International</Option>\r\n                              <Option value=\"Misc\">Misc</Option>\r\n                          </Select>\r\n                      </Form.Item>\r\n                      <Form.Item\r\n                          name='shares'\r\n                          label='Shares'\r\n                          rules={[\r\n                              { required: true, message: 'Must have at least 1 share.'}\r\n                          ]}\r\n                      >\r\n                          <Input type='number'/>\r\n                      </Form.Item>\r\n                      <Form.Item\r\n                          name='cost'\r\n                          label='Cost'\r\n                          rules={[\r\n                              { required: true, message: \"A stock must have a cost.\"}\r\n                          ]}\r\n                      >\r\n                          <Input\r\n                              addonBefore={costTypeSelector}\r\n                              style={{width: '100%'}}\r\n                          />\r\n                      </Form.Item>\r\n                      <Row justify='end' align='middle'>\r\n                          <Col span={4}>\r\n                              <Space>\r\n                                  <Button type='submit' onClick={this.addStockCancel}>Cancel</Button>\r\n                                  <Button type='primary' htmlType='submit'>Submit</Button>\r\n                              </Space>\r\n\r\n                          </Col>\r\n                          <Col span={5}/>\r\n                      </Row>\r\n                  </Form>\r\n              </Modal>\r\n          </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Card, Button, Row, Col, Statistic} from 'antd';\r\nimport {ArrowDownOutlined, ArrowUpOutlined} from '@ant-design/icons'\r\n// import 'antd/dist/antd.css';\r\nimport '../../App.css';\r\n\r\nexport default class TableInternal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card\r\n                title={this.props.data.title}\r\n                headStyle={{backgroundColor:'#d9d9d9',color: '#000000', borderRadius: 0}}\r\n                bodyStyle={{borderRadius: 0}}\r\n                bordered={false}\r\n            >\r\n                <Row>\r\n                    <Col>\r\n\r\n                    </Col>\r\n                    <Col>\r\n\r\n                    </Col>\r\n                    <Col>\r\n                        <Statistic\r\n                            value={this.props.data.changePercent}\r\n                            precision={2}\r\n                            valueStyle={this.props.data.changePercent >= 0 ?\r\n                                ({color: '#3f8600'}) :\r\n                                ({color: '#cf1322'})\r\n                            }\r\n                            prefix={this.props.data.changePercent >= 0 ?\r\n                                (<ArrowUpOutlined/>):\r\n                                (<ArrowDownOutlined/>)\r\n                            }\r\n                            suffix=\"%\"\r\n                            />\r\n                    </Col>\r\n                </Row>\r\n            </Card>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Card, Button, Row, Col, Table, Descriptions,Switch, Space } from 'antd';\r\nimport { auth } from '../../services/firebase';\r\nimport AddStock from \"../../popups/addStock\";\r\nimport '../../App.css';\r\n\r\nimport TableInternal from \"./tableInternal\";\r\n\r\nconst sectors = [\r\n    {value:'Technology', text:'Technology'},\r\n    {value:'Communication', text:'Communication'},\r\n    {value: 'Consumer Discretionary', text: 'Consumer Discretionary'},\r\n    {value: 'Consumer Staple', text: 'Consumer Staple'},\r\n    {value: 'Energy', text:'Energy'},\r\n    {value: 'Financial', text: 'Financial'},\r\n    {value: 'Healthcare', text: 'Healthcare'},\r\n    {value: 'Industrial', text: 'Industrial'},\r\n    {value: 'Materials', text:'Materials'},\r\n    {value: 'Real Estate', text:'Real Estate'},\r\n    {value: 'Utilities', text: 'Utilities'},\r\n    {value: 'International', text: 'International'},\r\n    {value: 'Misc', text: 'Misc'}\r\n]\r\nexport default class StockList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            showLoading: false,\r\n            gutterSize: [10,10],\r\n\r\n\r\n        }\r\n        // this.updateStocks = this.updateStocks.bind(this);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext){\r\n        return this.props.data !== nextProps.data || this.state.showLoading !== nextState.showLoading;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot){\r\n        if (this.props.data.length === 0 && auth().currentUser !== null) {\r\n            this.setState({showLoading: true});\r\n        } else {\r\n            this.setState({showLoading: false})\r\n        }\r\n\r\n    }\r\n    //\r\n    // async updateStocks(parentData, parentBookValue) {\r\n    //     this.setState({data: parentData, totalBookValue: parentBookValue});\r\n    // }\r\n\r\n\r\n    render() {\r\n        function colorSwitcher(int) {\r\n            const value = Number(int);\r\n            if (value >= 100){\r\n                return 'largePositive';\r\n            } else if (value > 25){\r\n                return 'mediumPositive';\r\n            } else if (value < 0){\r\n                return 'negative';\r\n            } else {\r\n                return 'smallPositive';\r\n            }\r\n        }\r\n        function sectorValue(word) {\r\n            let val = 0;\r\n            for (let i =0; i < word.length; i++){\r\n                val += word.charCodeAt(i);\r\n            }\r\n            return val;\r\n        }\r\n\r\n        const stockListColumns = [\r\n            {\r\n                title: '% Portfolio', dataIndex: 'portfolioPercent', fixed: 'left',\r\n                render: (text) => {\r\n                    return <span>{text} %</span>\r\n                }\r\n            },\r\n            {\r\n                title: 'Ticker', dataIndex: 'ticker', fixed: 'left',\r\n                render: (text) => {\r\n                    return <span>{text.toUpperCase()}</span>\r\n                }\r\n            },\r\n            {\r\n                title: 'Market Sector', dataIndex: 'category',\r\n                sorter: (a,b) => sectorValue(a.category) - sectorValue(b.category),\r\n                filters: sectors,\r\n                onFilter: (value, record) => record.category.indexOf(value) === 0,\r\n            },\r\n            {\r\n                title: 'Current Price', dataIndex: 'current',\r\n                sorter:{\r\n                    compare:  (a,b) => a.current - b.current,\r\n                    multiple: 2,\r\n                },\r\n                render: (text) => {\r\n                    return <span>$ {text.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</span>\r\n                }\r\n            },\r\n            {\r\n                title: 'Shares', dataIndex: 'shares'\r\n            },\r\n            {\r\n                title: 'Book Value', dataIndex: 'cost',\r\n                sorter: {\r\n                    compare: (a,b) => a.cost - b.cost,\r\n                    multiple: 3\r\n                },\r\n                render: (text) => {\r\n                    return <span>$ {text.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</span>\r\n                }\r\n            },\r\n            {\r\n                title: 'Current Value', dataIndex: 'currentValue',\r\n                sorter: {\r\n                    compare: (a,b) => a.currentValue - b.currentValue,\r\n                    multiple: 1\r\n                },\r\n                render: (text) => {\r\n                        return <span>$ {text.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</span>\r\n                }\r\n            },\r\n            {\r\n                title: 'Profit', dataIndex: 'profit',\r\n                render: (text) => {\r\n                    return <span>$ {text.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</span>\r\n                }\r\n            },\r\n            {\r\n                title: '% Profit', dataIndex: 'profitPercent',\r\n                render: (text) => {\r\n                    return <span>{text.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}%</span>;\r\n                }\r\n            },\r\n        ]\r\n        const myCardTitle = {\r\n            'xs': 12,\r\n            'md': 14,\r\n            'lg': 18,\r\n        }\r\n        const myCardButtons = {\r\n            'xs': 10,\r\n            'md': 10,\r\n            'lg': 6,\r\n        }\r\n        return (\r\n            <div\r\n                key={this.props.data}>\r\n                <Row align='middle' className='stonkCardHeader'>\r\n                    <Col {...myCardTitle} >\r\n                        <h3 style={{color: '#fff'}}>Portfolio</h3>\r\n                    </Col>\r\n                    <Col {...myCardButtons}>\r\n                        <Space style={{color: '#fff'}}>\r\n                            Currency:\r\n                            <Switch checkedChildren={'CAD'} unCheckedChildren={'USD'} defaultChecked\r\n                                    onChange={this.props.setCurrency}/>\r\n                            &nbsp;\r\n                            <AddStock updateMainData={this.props.updateParentData}/>\r\n                        </Space>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <div className='stonkCardBody'>\r\n                    <Table\r\n                        rowClassName={ (record, index) => {\r\n                            return `${colorSwitcher(record['profitPercent'])}`;\r\n                        }}\r\n                        expandable={{\r\n                            expandedRowRender: (record, index) => {\r\n                                return <TableInternal data={record}/>\r\n                            },\r\n                            expandRowByClick: true\r\n                        }}\r\n\r\n                        columns={stockListColumns}\r\n                        pagination={false}\r\n                        scroll={{x: 1000, y:300}}\r\n                        dataSource={this.props.data}\r\n                        loading={this.state.showLoading}\r\n                        size=\"small\"\r\n                        style={{borderRadius: '25px'}}\r\n\r\n                        summary={ () => (\r\n                            <Table.Summary.Row style={{backgroundColor: '#f5f5f5'}}>\r\n                                <Table.Summary.Cell index={1} colRow={3} style={{backgroundColor: '#f5f5f5'}}>{`Total`}</Table.Summary.Cell>\r\n                                <Table.Summary.Cell/><Table.Summary.Cell/><Table.Summary.Cell/><Table.Summary.Cell/><Table.Summary.Cell/>\r\n                                <Table.Summary.Cell index={6}>\r\n                                    $ {this.props.totalBookValue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                                </Table.Summary.Cell>\r\n                                <Table.Summary.Cell index={7}>$ {this.props.currentTotal.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</Table.Summary.Cell>\r\n                                <Table.Summary.Cell index={8}>$ {(this.props.currentTotal - this.props.totalBookValue).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") }</Table.Summary.Cell>\r\n                                <Table.Summary.Cell index={9}>{((this.props.currentTotal/this.props.totalBookValue) * 100).toFixed(2)} %</Table.Summary.Cell>\r\n                            </Table.Summary.Row>\r\n                        )}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Donut } from '@ant-design/charts';\r\nimport {Card, Row, Col, Skeleton} from \"antd\";\r\nimport '../../App.css';\r\n\r\nexport default class LocationDonut extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formattedData: [],\r\n            originalData: [],\r\n            currentData: [],\r\n            updating: false,\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.formatData();\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        return this.prop !== nextProps || this.state !== nextState;\r\n    }\r\n    componentDidUpdate(prevProps){\r\n        if (this.props !== prevProps){\r\n            this.formatData();\r\n        }\r\n    }\r\n\r\n    formatData = () => {\r\n        if (this.state.updating === false){\r\n            this.setState({updating: true}, () => {\r\n\r\n                let dataOriginal = [];\r\n                let dataCurrent = [];\r\n                let locationWeightsOriginal = {};\r\n                let locationWeightsCurrent = {};\r\n\r\n                if (this.props.data.length !== 0){\r\n                    console.log(this.props.data)\r\n                    this.props.data.forEach( (positions) => {\r\n                        console.log(positions)\r\n                        try {\r\n                            locationWeightsOriginal[positions.location].Weight += Number(positions.originalPercent);\r\n                            locationWeightsCurrent[positions.location].Weight += Number(positions.portfolioPercent);\r\n                        } catch {\r\n                            locationWeightsOriginal[positions.location] = {'Weight': Number(positions.originalPercent), 'exchange': positions.exchange};\r\n                            locationWeightsCurrent[positions.location] = {'Weight': Number(positions.portfolioPercent), 'exchange': positions.exchange};\r\n                        }\r\n                    });\r\n\r\n                    Object.keys(locationWeightsOriginal).forEach( (key, index) => {\r\n                        dataOriginal.push({'Weight': locationWeightsOriginal[key].Weight.toFixed(2), 'exchange': locationWeightsOriginal[key].exchange});\r\n                        dataCurrent.push({'Weight': locationWeightsCurrent[key].Weight.toFixed(2), 'exchange': locationWeightsCurrent[key].exchange});\r\n                    });\r\n                }\r\n                console.log(dataCurrent)\r\n                this.setState({originalData: dataOriginal, currentData: dataCurrent, formattedData: dataCurrent, updating: false});\r\n            });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const data = this.state.formattedData;\r\n        const locationDonut = {\r\n            // forceFit: true,\r\n            title: {\r\n                visible: false,\r\n                text: \"Location Breakdown\"\r\n            },\r\n            description:{\r\n                visible: false,\r\n                text: 'some description'\r\n            },\r\n            radius: 1,\r\n            data,\r\n            // padding: 'auto',\r\n            angleField: 'Weight',\r\n            colorField: 'exchange',\r\n            statistic: {visible: false},\r\n        }\r\n        return (\r\n            <Card title='Location Breakdown' className='cardRounded'>\r\n                <Row justify='center'>\r\n                    <Col span={24}>\r\n                        { this.state.formattedData.length !== 0 ?\r\n                            (<Donut {...locationDonut}/>)\r\n                            :(<Skeleton active/>)}\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        ...largest location, smallest location\r\n                    </Col>\r\n                </Row>\r\n            </Card>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Radar } from '@ant-design/charts';\r\nimport {Card, Col, Row, Skeleton} from 'antd';\r\nimport '../../App.css';\r\n\r\n\r\n\r\nexport default class CategoryRadar extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            formattedData: [],\r\n            marketSectors: ['Technology', 'Communication', 'Energy', 'Financial',\r\n                'Healthcare','Industrial', 'Consumer Staple','Consumer Discretionary',\r\n                'International','Misc', 'Utilities', 'Materials',  'Real Estate'],\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.formatData();\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return this.props !== nextProps || this.state !== nextState;\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        console.log('update', prevProps, this.props);\r\n        if (this.props !== prevProps){\r\n            this.formatData();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    formatData = () => {\r\n        let currentWeight = {};\r\n        let originalWeight = {};\r\n        let radarData = [];\r\n        let missingSectors = [];\r\n        let smallestSector = null;\r\n        let largestSector = null;\r\n        if (this.props.data.length !== 0) {\r\n\r\n            this.props.data.forEach((position) => {\r\n                try {\r\n                    currentWeight[position.category].weight += Number(position.portfolioPercent);\r\n                    originalWeight[position.category].weight += Number(position.originalPercent);\r\n\r\n                } catch(error){\r\n                    currentWeight[position.category] = {weight: Number(position.portfolioPercent)};\r\n                    originalWeight[position.category] = {weight : Number(position.originalPercent)};\r\n                }\r\n            });\r\n\r\n            this.state.marketSectors.forEach( (sector) => {\r\n                try{\r\n                    radarData.push({'Market Sector': sector, Weight: currentWeight[sector].weight, Type: 'Current'},\r\n                        {'Market Sector': sector, Weight: originalWeight[sector].weight, Type: 'Original'});\r\n                } catch(error){\r\n                    console.log(error);\r\n                }\r\n\r\n\r\n            });\r\n\r\n\r\n        }\r\n        this.setState({formattedData: radarData});\r\n    }\r\n\r\n    render() {\r\n        const categoryPlot = {\r\n            // forceFit: true,\r\n            title:{\r\n                visible: false,\r\n                text: 'Market Sector Radar'\r\n            },\r\n            angleField: 'Market Sector',\r\n            radiusField: 'Weight',\r\n            seriesField: 'Type',\r\n            radiusAxis: { grid: {line: {type: 'line'} } },\r\n            line: { visible: true},\r\n            area: {\r\n                visible: true,\r\n                style: {\r\n                    opacity: 0.25,\r\n                },\r\n            },\r\n            point: {\r\n                visible: true,\r\n                shape: 'circle'\r\n            },\r\n            legend: {\r\n                visible: true,\r\n                position: 'bottom-center',\r\n            },\r\n        };\r\n        return (\r\n            <Card title='Market Sector Weights' className='cardRounded'>\r\n                <Row justify='center' align='middle'>\r\n                    <Col span={24}>\r\n                        {this.state.formattedData.length !== 0 ?\r\n                            (<Radar {...categoryPlot} data={this.state.formattedData}/>) :\r\n                            (<Skeleton active/>)\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col span={24}>\r\n                        ...heaviest industyr, lightest industyr, original heavy, original light\r\n                    </Col>\r\n                </Row>\r\n            </Card>\r\n\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {Card, Row, Col, List, Table, DatePicker } from 'antd';\r\nimport '../../App.css';\r\nconst { RangePicker } = DatePicker;\r\n\r\nexport default class RecentTransactionCard extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n            data: [],\r\n            tickers: [],\r\n            start: null,\r\n            end: null,\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.sortData();\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        return this.props !== nextProps || this.state !== nextState;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props !== prevProps){\r\n            this.sortData();\r\n        }\r\n    }\r\n\r\n    sortData = () => {\r\n        if (this.state.loading === false && this.props.data.length !== 0){\r\n            this.setState({loading: true}, () => {\r\n                let data = [];\r\n                let tickers = [];\r\n\r\n                try {\r\n                    for (let i = 0; i < this.props.data.length; i++) {\r\n                        const transactions = this.props.data[i].transactions;\r\n                        const transactKeys = Object.keys(transactions);\r\n                        console.log(transactions);\r\n                        tickers.push({value: this.props.data[i].ticker, text: this.props.data[i].ticker});\r\n\r\n                        for (let j = 0; j < transactKeys.length; j++) {\r\n\r\n                            let d = transactions[transactKeys[j]].date.split(' ');\r\n                            d.splice(5,5);\r\n                            d = d.join(' ');\r\n\r\n                            let type;\r\n                            let t = transactions[transactKeys[j]].transaction;\r\n                            if (t.search(/bought/i) !== -1){\r\n                                type = 'Buy'\r\n                            } else if (t.search(/sell/i) !== -1){\r\n                                type = 'Sell'\r\n                            }\r\n\r\n                            data.push({\r\n                                ticker: this.props.data[i].ticker,\r\n                                key: i.toString() + j.toString(),\r\n                                date: d,\r\n                                action: t,\r\n                                type: type,\r\n                            });\r\n                        }\r\n                        data.sort((a, b) => {\r\n                            return new Date(b.date) - new Date(a.date);\r\n                        });\r\n\r\n                        this.setState({data: data, tickers: tickers, loading: false});\r\n                    }\r\n                } catch(error){\r\n                    console.log(error);\r\n                    this.setState({data: data, tickers: tickers, loading: false});\r\n                }\r\n                console.log(data);\r\n            });\r\n        }\r\n    }\r\n\r\n    onDateRangeChange = (range, rangeStrings) => {\r\n        console.log(range, rangeStrings);\r\n        let start;\r\n        let end;\r\n        if (rangeStrings[0] === \"\"){\r\n            start = null\r\n        } else {\r\n            start = new Date(rangeStrings[0] + ' 00:00:00');\r\n        }\r\n        if (rangeStrings[1] === \"\"){\r\n            end = null;\r\n        } else {\r\n            end = new Date( rangeStrings[1] + '23:59:59');\r\n        }\r\n        this.setState({start: start, end: end});\r\n    }\r\n\r\n    render(){\r\n        const columns = [\r\n            {\r\n                title: 'Date', dataIndex: 'date',\r\n                filterDropdown: () => {return <RangePicker\r\n                                                    allowEmpty={[true, true]}\r\n                                                    onCalendarChange={this.onDateRangeChange}/>},\r\n                onFilter: (value, record) => {\r\n                    let day = new Date(record.date);\r\n                    console.log(day);\r\n                    if (this.state.start === null){\r\n                        return day <= this.state.end;\r\n                    } else if (this.state.end === null){\r\n                        return day >= this.state.start;\r\n                    } else {\r\n                        return (day <= this.state.end && day >= this.state.start);\r\n                    }\r\n\r\n                }\r\n            },\r\n            {\r\n                title: 'Type', dataIndex: 'type',\r\n                filters: [{value: 'Buy', text: 'Buy'}, {value: 'Sell', text: 'Sell'}],\r\n                onFilter: (value, record) => record.type.indexOf(value) === 0,\r\n            },\r\n            {\r\n                title: 'Ticker', dataIndex: 'ticker',\r\n                filters: this.state.tickers,\r\n                onFilter: (value, record) => record.ticker.indexOf(value) === 0,\r\n            },\r\n            {\r\n                title: 'Action', dataIndex: 'action'\r\n            }\r\n        ]\r\n\r\n        return (\r\n          // <Card title='Recent Transactions' className='cardRounded'>\r\n          // {/*/!*TODO:Turn list into infinite scrolling*!/*/}\r\n          // {/*    <List*/}\r\n          // {/*        itemLayout='horizontal'*/}\r\n          // {/*        dataSource={this.state.data}*/}\r\n          // {/*        renderItem={ (item) =>(*/}\r\n          // {/*            <List.Item>*/}\r\n          // {/*                <List.Item.Meta*/}\r\n          // {/*                    title={item.ticker}*/}\r\n          // {/*                    description={`<div>Date: ${item.date}</br>Transaction: ${item.action}</div>`}*/}\r\n          // {/*                />*/}\r\n          // {/*            </List.Item>*/}\r\n          // {/*        )*/}\r\n          // {/*        }*/}\r\n          // {/*        />*/}\r\n          //\r\n          //\r\n          // </Card>\r\n          //\r\n            <div>\r\n                <div className='stonkCardHeader'>\r\n                    <h3 style={{color: '#fff'}}>Recent Transactions</h3>\r\n                </div>\r\n                <div className='stonkCardBody'>\r\n                    <Table\r\n                        columns={columns}\r\n                        dataSource={this.state.data}\r\n                        loading={this.state.loading}\r\n                        rowClassName='recentTransaction'\r\n                        size='small'\r\n                        pagination={false}\r\n                        scroll={{y:300}}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Row, Col, Button, message, notification, Skeleton, Card} from 'antd';\r\nimport StockList from \"../components/Portfolio/stocklist\";\r\nimport LocationDonut from '../components/Portfolio/locationDonut';\r\nimport CategoryRadar from '../components/Portfolio/categoryRadar';\r\nimport { auth, realTime } from '../services/firebase';\r\nimport RecentTransactionCard from \"../components/Portfolio/recentTransactionCard\";\r\nimport {getMultipleTickers} from \"../helpers/rtdbCommunication\";\r\n// import 'antd/dist/antd.css';\r\nimport '../App.css';\r\nconst stonkApi = 'http://localhost:5000/stonksAPI/v1';\r\n\r\nexport default class Portfolio extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            borders: [8,8],\r\n            data: [],\r\n            currentValue: 0,\r\n            originalBookValue: 0,\r\n            updatingData: false,\r\n            currentUser: null,\r\n            currency: 'CAD'\r\n        }\r\n        this.formatData = this.formatData.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(auth().currentUser);\r\n        try{\r\n            fetch(stonkApi + '/update');\r\n        } catch (error){\r\n            console.log('Error: failed to fetch from api');\r\n            message.error('There was an error getting live stock data');\r\n        }\r\n        this.setPortfolioListener(auth().currentUser.uid);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        return this.props !== nextProps ||\r\n            this.state.data !== nextState.data ||\r\n            this.state.currentUser !== nextState.currentUser ||\r\n            this.state.updatingData !== nextState.updatingData;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.setState({currentUser: auth().currentUser}, () => {\r\n            if (this.state.currentUser === null){\r\n                this.setState({data: []});\r\n                this.portfolioListener.off();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    setPortfolioListener = (uid) => {\r\n        this.portfolioListener = realTime.ref('/portfolios/' + uid).on('value', (positions) => {\r\n            this.formatData(positions);\r\n        });\r\n    }\r\n\r\n    async formatData(positions){\r\n        let portfolio = positions.val();\r\n        let tickers = Object.keys(portfolio);\r\n        //Set the users portfolio data before getting the live stock data\r\n        let data = await this.setPortfolio(portfolio, tickers);\r\n        console.log(data);\r\n        if (this.state.updatingData === false){\r\n            this.setState({updatingData: true}, async() => {\r\n                try{\r\n                    // const result = await fetch(`${stonkApi}/current/multiple?tickers=${tickers}`);\r\n                    // const dataList = await result.json();\r\n                    const dataList = await getMultipleTickers('current', 'tickers', tickers);\r\n\r\n                    let stockData = {}\r\n                    let currentTotalValue = 0;\r\n\r\n                    for (let i = 0; i < tickers.length; i++){\r\n                        stockData[dataList[i]['ticker']] = dataList[i];\r\n                    }\r\n\r\n                    for (let i = 0; i < tickers.length; i++){\r\n\r\n                        const t = tickers[i];\r\n                        const stock = stockData[t.replace('_','.')];\r\n                        console.log(portfolio, t, stockData)\r\n                        const cv = stock['price'] * Number(portfolio[t].shares);\r\n                        const profit = (stock.price * Number(portfolio[t].shares)) - portfolio[t].cost;\r\n                        currentTotalValue += cv;\r\n\r\n                        data[i] = {...data[i], ...stock};\r\n                        delete data[i].price;\r\n                        data[i].currentValue = cv.toFixed(2);\r\n                        data[i].profit = profit.toFixed(2);\r\n                        data[i].current = stock['price'].toFixed(2);\r\n                        data[i].profitPercent = ((profit/portfolio[t].cost) * 100).toFixed(2);\r\n                    }\r\n\r\n                    for (let i = 0; i < data.length; i++){\r\n                        data[i].portfolioPercent = ((data[i].currentValue / currentTotalValue)*100).toFixed(2);\r\n                        data[i].originalPercent = ((data[i].cost / this.state.originalBookValue)*100).toFixed(2);\r\n                    }\r\n                    console.log(data);\r\n\r\n                    this.setState({updatingData:false, data: data, currentValue: currentTotalValue});\r\n\r\n                } catch(error) {\r\n                    console.log(error);\r\n                    message.error('There was an error getting live stock data.');\r\n                    this.setState({updatingData:false, currentValue: 0});\r\n                }\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    async setPortfolio(portfolio, tickers){\r\n        let data = [];\r\n        let originalBookVal = 0;\r\n        // console.log(portfolio)\r\n        for (let i = 0; i < tickers.length; i++){\r\n            originalBookVal += portfolio[tickers[i]]['cost']\r\n            let position = {\r\n                ...portfolio[tickers[i]],\r\n                ticker: tickers[i].replace('_','.'),\r\n                key: tickers[i].replace('_','.'),\r\n                portfolioPercent: 0,\r\n                originalPercent: 0,\r\n                current: 0.00,\r\n                currentValue: 0.00,\r\n                profit: 0.00,\r\n                profitPercent: 0.00,\r\n                changePercent: 0.00,\r\n                title: 'Unknown',\r\n                currency: 'Unknown',\r\n                exchange: 'Unknown'\r\n            }\r\n            position.cost = position.cost.toFixed(2);\r\n            data.push(position);\r\n        }\r\n        this.setState({originalBookValue:originalBookVal});\r\n        return data\r\n    }\r\n\r\n    setCurrency = (currency) => {\r\n        console.log(currency);\r\n        //todo: add switch for currency\r\n\r\n    }\r\n\r\n    render(){\r\n        const colSize = {\r\n            'sm': 24,\r\n            'md': 12,\r\n            'lg': 8,\r\n        }\r\n        return (\r\n            <div className='routerBackground'>\r\n                <Row justify='center' gutter={this.state.borders}>\r\n                    <Col className='gutter-row' span={24}>\r\n                        <StockList\r\n                            data={this.state.data}\r\n                            totalBookValue={this.state.originalBookValue}\r\n                            currentTotal={this.state.currentValue}\r\n                            setCurrency={this.setCurrency}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row className='gutter-row' justify='center' gutter={this.state.borders}>\r\n\r\n                    <Col className='gutter-row' {...colSize}>\r\n                        <CategoryRadar data={this.state.data}/>\r\n                    </Col>\r\n                    <Col className='gutter-row' {...colSize}>\r\n                        <LocationDonut data={this.state.data}/>\r\n                    </Col>\r\n                    <Col {...colSize}>\r\n                        <RecentTransactionCard data={this.state.data}/>\r\n                    </Col>\r\n                </Row>\r\n                <Row justify='center' gutter={this.state.borders}>\r\n                    <Col>\r\n\r\n                    </Col>\r\n                    <Col>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n}","import React, { Component } from 'react';\r\nimport { auth } from './services/firebase';\r\nimport { Route, BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\r\nimport { Layout, Affix} from \"antd\";\r\nimport MenuBar from \"./components/menubar\";\r\nimport SideBar from \"./components/sideBar\";\r\nimport WorldStats from './pages/worldStats';\r\nimport Portfolio from \"./pages/Portfolio\";\r\nimport './App.css';\r\n\r\nconst {Header, Content, Footer, Sider} = Layout;\r\n\r\nfunction PrivateRoute({ component: Component, authenticated, ...rest}){\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => authenticated === true\r\n                ? <Component />\r\n                : <Redirect to={{pathname: '/', state: {from: props.location}}}/>\r\n            }\r\n            />\r\n    );\r\n}\r\nfunction PublicRoute({ component: Component, authenticated, ...rest}){\r\n    return (\r\n        <Route {...rest}\r\n            render={ (props) => authenticated === false\r\n                ? <Component {...props}/>\r\n                : <Redirect to={'/'}/>\r\n            }\r\n                />\r\n    )\r\n}\r\n\r\nexport default class App extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            currentUser: null,\r\n            authenticated: false,\r\n            collapsed: true\r\n        };\r\n        this.separatorCol = 15;\r\n        this.userCol = 2;\r\n    }\r\n\r\n    componentDidMount(){\r\n        auth().onAuthStateChanged((user) => {\r\n            this.setState({currentUser: user}, () => {\r\n                if (this.state.currentUser){\r\n                    this.setState({authenticated: true});\r\n                } else {\r\n                    this.setState({authenticated: false});\r\n                }\r\n            });\r\n        });\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        return this.state.currentUser !== auth().currentUser ||\r\n            this.state.authenticated !== nextState.authenticated ||\r\n            this.state.collapsed !== nextState.collapsed;\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        if (auth().currentUser === null){\r\n            this.setState({authenticated: false});\r\n        } else {\r\n            this.setState({authenticated: true});\r\n        }\r\n        this.setState({currentUser: auth().currentUser});\r\n    }\r\n\r\n    collapseSidebar = () => {\r\n        this.setState({collapsed: !this.state.collapsed});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Router>\r\n                    <Layout>\r\n                        <Header style={{position: 'fixed', zIndex: 10, width: '100%'}}>\r\n                            <MenuBar currentUser={this.state.currentUser}/>\r\n                        </Header>\r\n\r\n                        <Layout>\r\n                            <Sider\r\n                                breakpoint='lg'\r\n                                collapsible\r\n                                style={{height: '200vh', zIndex:0}}\r\n                                collapsed={this.state.collapsed}\r\n                                trigger={null}\r\n                                >\r\n                                <br/>\r\n                                <Affix offsetTop={25}>\r\n                                    <SideBar\r\n                                        authenticated={this.state.authenticated}\r\n                                        isCollapsed={this.state.collapsed}\r\n                                        collapse={this.collapseSidebar}\r\n                                    />\r\n                                </Affix>\r\n                            </Sider>\r\n\r\n                            <Content>\r\n                                {/*Here is the router for the content*/}\r\n                                    <Switch>\r\n                                        <Route exact path={'/'} component={WorldStats}/>\r\n                                        <PrivateRoute\r\n                                            path='/portfolio'\r\n                                            authenticated={this.state.authenticated}\r\n                                            component={Portfolio}\r\n                                        />\r\n                                        {/*<PublicRoute path='/world' component={World}/>*/}\r\n                                    </Switch>\r\n                            </Content>\r\n                        </Layout>\r\n                    </Layout>\r\n                </Router>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}